 def reverse_number(n: int) -> int:
...     """Returns the integer with its digits reversed."""
...     sign = -1 if n < 0 else 1
...     reversed_str = str(abs(n))[::-1]
...     return sign * int(reversed_str)
... print(reverse_number(12345))
...
54321
>>>
KeyboardInterrupt
>>> print(reverse_number(-12345))
-54321
>>> print(reverse_number(100034))
430001
>>> print(reverse_number(0))
0
>>> print(reverse_number(True))
1
>>> print(reverse_number(False))
0
try:
    print(reverse_number("12345")) 
TypeError
    print(reverse_number("Hi There 123"))  
TypeError
    print(reverse_number(3.14))  
TypeError
    print(reverse_number([1, 2, 3])) 
TypeError
    print(reverse_number(None)) 
TypeError
    print(reverse_number({1: 'one', 2: 'two'}))  
TypeError
    print(reverse_number((1, 2, 3)))  
TypeError
    print(reverse_number({1, 2, 3})) 
TypeError
    print(reverse_number(bytearray(b'12345')))  
TypeError
    print(reverse_number(b'12345'))  
TypeError
    print(reverse_number(range(5)))  
TypeError
    print(reverse_number(3 + 4j))  
TypeError
    print(reverse_number(float('inf')))  
TypeError
    print(reverse_number(float('nan')))
TypeError
    print(reverse_number(float(3.14)))  
TypeError
    print(reverse_number(complex(1, 2)))  
TypeError
except TypeError as e:
    print(f"TypeError: {e}")