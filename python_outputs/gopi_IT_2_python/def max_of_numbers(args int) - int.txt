def max_of_numbers(*args: int) -> int:
    """Returns the maximum of the given numbers."""
    if not args:
        raise ValueError("At least one number must be provided")
    return max(args)

print(max_of_numbers(1, 2, 3))
3
print(max_of_numbers(-1, -2, -3))
-1
try:
    print(max_of_numbers())
except ValueError as e:
    print(f"ValueError: {e}")
    try:
        print(max_of_numbers("1", "2", "3"))
    except TypeError as e:
        print(f"TypeError: {e}")
    try:
        print(max_of_numbers(1, 2, "3"))
    except TypeError as e:
        print(f"TypeError: {e}")
    try:
        print(max_of_numbers(1, 2, 3.5))
    except TypeError as e:
        print(f"TypeError: {e}")
    try:
        print(max_of_numbers([1, 2, 3]))
    except TypeError as e:
        print(f"TypeError: {e}")
    try:
        print(max_of_numbers(None))
    except TypeError as e:
        print(f"TypeError: {e}")
    try:
        print(max_of_numbers({1: 'one', 2: 'two'}))
    except TypeError as e:
        print(f"TypeError: {e}")
    try:
        print(max_of_numbers((1, 2, 3)))  
    except TypeError as e:
        print(f"TypeError: {e}")
    try:
        print(max_of_numbers({1, 2, 3}))  
    except TypeError as e:
        print(f"TypeError: {e}")

        
ValueError: At least one number must be provided
3
TypeError: '>' not supported between instances of 'str' and 'int'
3.5
[1, 2, 3]
None
{1: 'one', 2: 'two'}
(1, 2, 3)
{1, 2, 3}
