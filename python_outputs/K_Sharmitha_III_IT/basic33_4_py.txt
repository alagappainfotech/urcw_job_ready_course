def greet(name):
    """
    This function takes a name as input and prints a greeting message.
    :param name: str
    """
    print(f"Hello, {name}!")

    
KeyboardInterrupt
greet("Alice")
Hello, Alice!
def add_numbers(a, b):
    """
    This function takes two numbers as input and returns their sum.
    :param a: int or float
    :param b: int or float
    :return: int or float
    """
    return a + b

result = add_numbers(5, 3)
print(result)
8
def introduce(name, age=18):
     """
    This function introduces a person with a default age of 18.
    :param name: str
    :param age: int
    """
    print(f"My name is {name} and I am {age} years old.")
def introduce(name, age=18):
    """
    This function introduces a person with a default age of 18.
    :param name: str
    :param age: int
    """
    print(f"My name is {name} and I am {age} years old.")

    
introduce("Bob")
My name is Bob and I am 18 years old.
introduce("Alice", 25)
My name is Alice and I am 25 years old.
def print_numbers(*args):
    """
    This function takes a variable number of arguments and prints them.
    :param args: tuple
    """
    for num in args:
        print(num)

        
print_numbers(1, 2, 3, 4)
1
2
3
4
def print_details(**kwargs):
     """
    This function takes keyword arguments and prints them as key-value pairs.
    :param kwargs: dict
    """

     
for key, value in kwargs.items():
    print(f"{key}: {value}")
print_details(name="Alice", age=25, city="New York")
name: Alice
age: 25
city: New York
square = lambda x: x ** 2
print(square(4))  # Output: 16
16